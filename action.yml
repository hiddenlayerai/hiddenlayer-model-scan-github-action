name: 'Model Scanner'
description: 'Scans models for vulnerabilities using the HiddenLayer Model Scanner'
branding:
  icon: lock
  color: green
inputs:
  model_path:
    description: 'Path to the model, either a file or a folder'
    required: true
  api_url:
    description: 'URL of the HiddenLayer API'
    required: false
    default: 'https://api.us.hiddenlayer.ai'
  fail_on_detection:
    description: Fails pipeline if a malicious models is detected.
    required: false
    default: true
  output_file:
    description: Writes detection output to a json file.
    required: false
    default: null
  sarif_file:
    description: Writes detection output in the SARIF format to a json file.
    required: false
    default: null
  run_id:
    description: Run ID
    required: false
    default: null
  model_name:
    description: Model name
    required: false
    default: null 
  model_version:
    description: Model version
    required: false
  community_scan:
    description: Scan community model directly
    required: false
    default: ''
    type: choice
    options:
      - 'LOCAL'
      - 'AWS_PRESIGNED'
      - 'AWS_IAM_ROLE'
      - 'AZURE_BLOB_SAS'
      - 'AZURE_BLOB_AD'
      - 'GOOGLE_SIGNED'
      - 'GOOGLE_OAUTH'
      - 'HUGGING_FACE'

outputs:
  detection_results:
    description: 'Markdown table of detection results.'
runs:
  using: 'docker'
  image: 'Dockerfile'
  args:
    - ${{ inputs.model_path }}
    - ${{ inputs.api_url }}
    - ${{ inputs.output_file }}
    - ${{ inputs.sarif_file }}
    - ${{ inputs.run_id }}
    - ${{ inputs.model_name }}
    - ${{ inputs.model_version != '' && inputs.model_version || null }}
    - ${{ inputs.community_scan != '' && inputs.community_scan || null }}
    - ${{ inputs.fail_on_detection == 'true' && '--fail-on-detection' || null }}
